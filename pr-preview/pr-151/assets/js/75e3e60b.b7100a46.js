"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[6515],{54433:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var s=t(85893),i=t(11151);const a={title:"Quellcode",description:"",tags:[]},r=void 0,l={id:"exam-exercises/exam-exercises-java1/code",title:"Quellcode",description:"",source:"@site/docs/exam-exercises/exam-exercises-java1/code.md",sourceDirName:"exam-exercises/exam-exercises-java1",slug:"/exam-exercises/exam-exercises-java1/code",permalink:"/java-docs/pr-preview/pr-151/exam-exercises/exam-exercises-java1/code",draft:!1,unlisted:!1,editUrl:"https://github.com/jappuccini/java-docs/tree/main/docs/exam-exercises/exam-exercises-java1/code.md",tags:[],version:"current",frontMatter:{title:"Quellcode",description:"",tags:[]},sidebar:"examExercisesSidebar",previous:{title:"Weihnachtsbaum",permalink:"/java-docs/pr-preview/pr-151/exam-exercises/exam-exercises-java1/christmas-tree"},next:{title:"Pl\xe4tzchendose",permalink:"/java-docs/pr-preview/pr-151/exam-exercises/exam-exercises-java1/cookie-jar"}},o={},c=[{value:"Quellcode zur Klasse <em>Bytes</em>",id:"quellcode-zur-klasse-bytes",level:2},{value:"Quellcode zur Klasse <em>Strings</em>",id:"quellcode-zur-klasse-strings",level:2},{value:"Quellcode zur Klasse <em>Patterns</em>",id:"quellcode-zur-klasse-patterns",level:2},{value:"Quellcode zur Klasse <em>Expressions</em>",id:"quellcode-zur-klasse-expressions",level:2}];function u(e){const n={code:"code",em:"em",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Welche Konsolenausgaben erzeugen die abgebildeten Klassen?"}),"\n",(0,s.jsxs)(n.h2,{id:"quellcode-zur-klasse-bytes",children:["Quellcode zur Klasse ",(0,s.jsx)(n.em,{children:"Bytes"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",metastring:'title="Bytes.java" showLineNumbers',children:'public class Bytes {\n\n  public static void main(String[] args) {\n    byte byte1 = (byte) 0b10101;\n    byte byte2 = (byte) 129;\n    byte byte3 = (byte) 0b11010101;\n    byte byte4 = 0b10110;\n    byte byte5 = 0b101110;\n    byte byte6 = (byte) (byte4 - byte5);\n\n    System.out.println("byte1: " + byte1);\n    System.out.println("byte2: " + byte2);\n    System.out.println("byte3: " + byte3);\n    System.out.println("byte4: " + byte4);\n    System.out.println("byte5: " + byte5);\n    System.out.println("byte6: " + byte6);\n  }\n\n}\n'})}),"\n",(0,s.jsxs)(n.h2,{id:"quellcode-zur-klasse-strings",children:["Quellcode zur Klasse ",(0,s.jsx)(n.em,{children:"Strings"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",metastring:'title="Strings.java" showLineNumbers',children:'public class Strings {\n\n  public static void main(String[] args) {\n    a();\n    b();\n    c();\n  }\n\n  public static void a() {\n    String[] values = {"NH", "FF3", "4", "XTU"};\n    String a = values[2];\n    int b = values[1].length() == 3 ? 1 : 2;\n    int c = (int) (0.33 + 0.33 + 0.33);\n    String d = 1 + "";\n    char e = values[3].charAt(1);\n\n    System.out.println(a + values[b] + values[c] + d + e + "Z3");\n  }\n\n  public static void b() {\n    String[] values = {"RO", "ER"};\n    boolean x = true;\n    int i = 3, j = 5, k = 4;\n    int index = ++i % 2 == 0 ? 0 : 1;\n    j -= x || ++k == 5 ? 5 : 0;\n\n    System.out.println(values[1] + values[index] + "R " + i + j + k);\n  }\n\n  private static void c() {\n    String[] values = {"COLD", "AEIOU", "HOT"};\n    int index1 = values[2].length() == 3 ? 2 : 0;\n    String value1 = values[index1];\n    int index2 = (int) (2.1 + 2.8);\n    char value2 = values[1].charAt(index2);\n\n    System.out.println(index1 + value1 + index2 + value2);\n  }\n\n}\n'})}),"\n",(0,s.jsxs)(n.h2,{id:"quellcode-zur-klasse-patterns",children:["Quellcode zur Klasse ",(0,s.jsx)(n.em,{children:"Patterns"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",metastring:'title="Patterns.java" showLineNumbers',children:'public class Patterns {\n\n  public static void main(String[] args) {\n    a();\n    b();\n    c();\n  }\n\n  public static void a() {\n    for (int i = 0; i < 5; i++) {\n      if (i == 0 || i == 5 - 1) {\n        for (int j = 0; j < 5; j++) {\n          System.out.print(\'-\');\n        }\n      } else {\n        System.out.print(\'|\');\n      }\n      System.out.println();\n    }\n  }\n\n  public static void b() {\n    for (int i = 0; i < 5; i++) {\n      if (i == 0 || i == 4) {\n        for (int x = 0; x < 2; x++) {\n          System.out.print("X-");\n        }\n      System.out.print("X");\n      } else {\n        System.out.print("X");\n        for (int x = 0; x < 3; x++) {\n          System.out.print("-");\n        }\n        System.out.print("X");\n      }\n      System.out.println();\n    }\n  }\n\n  private static void c() {\n    char x = \'X\';\n    for (int i = 0; i < 5; i++) {\n      System.out.print(i + ": ");\n      for (int j = 5 - i - 1; j > 0; j--) {\n        System.out.print(x);\n      }\n      System.out.println();\n    }\n  }\n\n}\n'})}),"\n",(0,s.jsxs)(n.h2,{id:"quellcode-zur-klasse-expressions",children:["Quellcode zur Klasse ",(0,s.jsx)(n.em,{children:"Expressions"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",metastring:'title="Expressions.java" showLineNumbers',children:'public class Expressions {\n\n  public static void main(String[] args) {\n    a(4, 3);\n    b();\n    c();\n  }\n\n  public static void a(int a, int b) {\n    int c = (a < b) ? -1 : (a > b) ? 1 : 0;\n    b++;\n    boolean d = (a < b && ++b == 5) ? true : false;\n\n    System.out.println("b: " + b);\n    System.out.println("c: " + c);\n    System.out.println("d: " + d);\n  }\n\n  public static void b() {\n    String s = "Programmierung";\n    char c = s.charAt(s.length() - 3);\n    double d = 0.9;\n    int i = 2 * (int) d;\n\n    System.out.println("c: " + c);\n    System.out.println("i: " + i);\n  }\n\n  public static void c() {\n    String textA = new String("Text A");\n    String textB = new String("Text B");\n    boolean boolean1, boolean2;\n    int int1 = 1;\n    boolean1 = (textA == textB) ? true : false;\n    boolean2 = boolean1 && ++int1 % 2 == 0 ? true : false;\n\n    System.out.println("int1: " + int1);\n    System.out.println("boolean1: " + boolean1);\n    System.out.println("boolean2: " + boolean2);\n  }\n\n}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>r});var s=t(67294);const i={},a=s.createContext(i);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);