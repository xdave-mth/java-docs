"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[5414],{91575:(e,s,n)=>{n.d(s,{A:()=>l});var i=n(96540),r=n(74848);function l(e){let{children:s,initSlides:n,width:l=null,height:a=null}=e;return(0,i.useEffect)((()=>{n()})),(0,r.jsx)("div",{className:"reveal reveal-viewport",style:{width:l??"100vw",height:a??"100vh"},children:(0,r.jsx)("div",{className:"slides",children:s})})}},99845:(e,s,n)=>{n.d(s,{i:()=>i});const i=()=>{const e=n(38182),s=n(72186),i=n(13504),r=n(93558);new(n(89665))({plugins:[e,s,i,r]}).initialize({hash:!0})}},84830:(e,s,n)=>{n.d(s,{C:()=>r});n(96540);var i=n(74848);const r=()=>(0,i.jsx)("p",{style:{fontSize:"8px",position:"absolute",bottom:0,right:0},children:"*NKR"})},57857:(e,s,n)=>{n.r(s),n.d(s,{default:()=>c});var i=n(91575),r=n(99845),l=n(84830),a=n(74848);function c(){return(0,a.jsxs)(i.A,{initSlides:r.i,children:[(0,a.jsx)("section",{children:(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Agenda"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"Wiederholung"}),(0,a.jsx)("li",{className:"fragment",children:"variable Argumentlisten"}),(0,a.jsx)("li",{className:"fragment",children:"Interface"}),(0,a.jsx)("li",{className:"fragment",children:"Komparator"}),(0,a.jsx)("li",{className:"fragment",children:"Zusammenfassung"})]})]})}),(0,a.jsxs)("section",{children:[(0,a.jsx)("section",{children:(0,a.jsx)("h2",{children:"Wiederholung"})}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"abstract Modifier"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"abstrakte Klassen"}),(0,a.jsx)("li",{className:"fragment",children:"abstrakte Methoden"})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"final Modifier"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"finale Klassen"}),(0,a.jsx)("li",{className:"fragment",children:"finale Methoden"})]})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("section",{children:(0,a.jsx)("h2",{children:"Interfaces"})}),(0,a.jsx)("section",{children:(0,a.jsx)("p",{children:"Wie kann man Dogs und Cats in einer Liste speichern?"})}),(0,a.jsx)("section",{children:(0,a.jsx)("p",{children:"Wie kann man Baby, Child und Adult in einer Liste speichern?"})}),(0,a.jsx)("section",{children:(0,a.jsx)("p",{children:"Wie kann man Dogs, Cats, Baby, Child und Adult in einer Liste speichern?"})}),(0,a.jsxs)("section",{children:[(0,a.jsx)("p",{children:"Limitierungen von abstrakten Klassen"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"komplexe Vererbungshierarchie"}),(0,a.jsx)("li",{className:"fragment",children:"keine Mehrfachvererbung"})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Interfaces"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"definieren Methoden"}),(0,a.jsx)("li",{className:"fragment",children:"werden von Klassen implementiert"})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Zweck von Interfaces"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"Unabh\xe4ngig von Vererbung"}),(0,a.jsx)("li",{className:"fragment",children:"Verstecken von Implementierungsdetails"}),(0,a.jsx)("li",{className:"fragment",children:"Schnittstelle zwischen Ersteller und Verwender"})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Ersteller des Warenkorbs"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"Beschreibung anzeigen"}),(0,a.jsx)("li",{className:"fragment",children:"Einzelpreis ermitteln"})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Realisierung des Warenkorbs"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"Warenkorb Modul definiert Interface"}),(0,a.jsx)("li",{className:"fragment",children:"Artikel implementieren das Interface"})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Demo Interface"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"ShoppingCart"}),(0,a.jsx)("li",{className:"fragment",children:"Dog und Cat implementieren Interface"}),(0,a.jsx)("li",{className:"fragment",children:"ToDo Liste"}),(0,a.jsx)("li",{className:"fragment",children:"Dog und Cat implementieren Interface"})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"weitere Anwendungsgebiete*"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"Dependency Injection"}),(0,a.jsx)("li",{className:"fragment",children:"Unit Tests"})]}),(0,a.jsx)("div",{children:(0,a.jsx)(l.C,{})})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("section",{children:(0,a.jsx)("h2",{children:"Komparatoren"})}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Zweck von Komparatoren"}),(0,a.jsx)("p",{children:"Sortieren von Listen"})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Funktionsweise"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"Vergleichen von zwei Objekten"}),(0,a.jsx)("li",{className:"fragment",children:"erstes Element davor einordnen: -1"}),(0,a.jsx)("li",{className:"fragment",children:"erstes Element dahinter einordnen: 1"}),(0,a.jsx)("li",{className:"fragment",children:"erstes Element gleich einordnen: 0"})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Welche Interfaces gibt es?"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"Comparable"}),(0,a.jsx)("li",{className:"fragment",children:"Comparator"})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Comparable"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"definiert die Standardsortierung"}),(0,a.jsx)("li",{className:"fragment",children:"Implementierung in der Datenklasse"}),(0,a.jsx)("li",{className:"fragment",children:"Bsp. Human nach Alter sortieren"})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Comparator"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"definiert eine Sortierung"}),(0,a.jsx)("li",{className:"fragment",children:"Implementierung in eigener Klasse"}),(0,a.jsx)("li",{className:"fragment",children:"Bsp. AgeComparator, NameComparator"})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Wie sortiert man eine Liste?"}),(0,a.jsx)("pre",{className:"fragment",children:(0,a.jsx)("code",{className:"java","data-line-numbers":"2|3|4",dangerouslySetInnerHTML:{__html:"// ...\nArrayList&lt;Human&gt; humans = new ArrayList&lt;&gt;();\nCollections.sort(humans);\nCollections.sort(humans, new AgeComparator());\n// ..."}})})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Demo Komparatoren"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"Human Comparable"}),(0,a.jsx)("li",{className:"fragment",children:"AgeComparator"})]})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Zusammenfassung"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"variable Argumentlisten"}),(0,a.jsx)("li",{className:"fragment",children:"Interfaces"}),(0,a.jsx)("li",{className:"fragment",children:"Komparatoren"})]})]}),(0,a.jsxs)("section",{children:[(0,a.jsx)("h2",{children:"Rest of the day"}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{className:"fragment",children:"Interfaces 01"}),(0,a.jsx)("li",{className:"fragment",children:"Comparators 01 - 02"})]})]})]})]})}}}]);