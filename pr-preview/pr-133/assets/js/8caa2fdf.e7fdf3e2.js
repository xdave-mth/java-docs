"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[3085],{976:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var a=n(85893),r=n(11151),i=n(85521);const t={title:"ClassDiagrams04",description:""},l=void 0,o={id:"exercises/class-diagrams/class-diagrams04",title:"ClassDiagrams04",description:"",source:"@site/docs/exercises/class-diagrams/class-diagrams04.mdx",sourceDirName:"exercises/class-diagrams",slug:"/exercises/class-diagrams/class-diagrams04",permalink:"/java-docs/pr-preview/pr-133/exercises/class-diagrams/class-diagrams04",draft:!1,unlisted:!1,editUrl:"https://github.com/jappuccini/java-docs/tree/main/docs/exercises/class-diagrams/class-diagrams04.mdx",tags:[],version:"current",frontMatter:{title:"ClassDiagrams04",description:""},sidebar:"exercisesSidebar",previous:{title:"ClassDiagrams03",permalink:"/java-docs/pr-preview/pr-133/exercises/class-diagrams/class-diagrams03"},next:{title:"ClassDiagrams05",permalink:"/java-docs/pr-preview/pr-133/exercises/class-diagrams/class-diagrams05"}},u={},c=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Hinweis zur Klasse <em>Person</em>",id:"hinweis-zur-klasse-person",level:2},{value:"Hinweise zur Klasse <em>Employee</em>",id:"hinweise-zur-klasse-employee",level:2},{value:"Hinweise zur Klasse <em>Company</em>",id:"hinweise-zur-klasse-company",level:2},{value:"Konsolenausgabe",id:"konsolenausgabe",level:2}];function d(e){const s={code:"code",em:"em",h2:"h2",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["Erstelle die Klassen ",(0,a.jsx)(s.code,{children:"Company"}),", ",(0,a.jsx)(s.code,{children:"Employee"})," und ",(0,a.jsx)(s.code,{children:"Person"})," anhand des\nabgebildeten Klassendiagramms"]}),"\n",(0,a.jsx)(s.li,{children:"Erstelle eine ausf\xfchrbare Klasse, welche ein Unternehmen mit mehreren\nMitarbeitern erzeugt und auf der Konsole ausgibt"}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"klassendiagramm",children:"Klassendiagramm"}),"\n",(0,a.jsx)(s.mermaid,{value:"classDiagram\n    Company o-- Employee\n    Employee o-- Person\n\n    class Company {\n        -name: String &#123final&#125\n        -employees: ArrayList~Employee~ &#123final&#125\n        -numberOfEmployees: int\n        +Company(name: String)\n        +getName() String\n        +getEmployees() ArrayList~Employee~\n        +getNumberOfEmployees() int\n        +addEmployee(employee: Employee) void\n        +toString() String\n    }\n\n    class Person {\n        -name: String &#123final&#125\n        +Person(name: String)\n        +getName() String\n    }\n\n    class Employee {\n        -employeeId: int &#123final&#125\n        -person: Person &#123final&#125\n        -salaryInEuro: int\n        +Employee(employeeId: int, person: Person, salaryInEuro: int)\n        +getEmployeeId() int\n        +getName() String\n        +setSalaryInEuro(salaryInEuro: int) void\n        +getSalaryInEuro() int\n        +toString() String\n    }"}),"\n",(0,a.jsxs)(s.h2,{id:"hinweis-zur-klasse-person",children:["Hinweis zur Klasse ",(0,a.jsx)(s.em,{children:"Person"})]}),"\n",(0,a.jsx)(s.p,{children:"Der Konstruktor soll den Namen initialisieren."}),"\n",(0,a.jsxs)(s.h2,{id:"hinweise-zur-klasse-employee",children:["Hinweise zur Klasse ",(0,a.jsx)(s.em,{children:"Employee"})]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Der Konstruktor soll alle Attribute initialisieren"}),"\n",(0,a.jsxs)(s.li,{children:["Die Methode ",(0,a.jsx)(s.code,{children:"String getName()"})," soll den Namen des Mitarbeiters zur\xfcckgeben"]}),"\n"]}),"\n",(0,a.jsxs)(s.h2,{id:"hinweise-zur-klasse-company",children:["Hinweise zur Klasse ",(0,a.jsx)(s.em,{children:"Company"})]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Der Konstruktor soll den Namen sowie die Mitarbeiterliste initialisieren"}),"\n",(0,a.jsxs)(s.li,{children:["Die Methode ",(0,a.jsx)(s.code,{children:"void addEmployee(employee: Employee)"})," soll der Mitarbeiterliste\neinen Mitarbeiter hinzuf\xfcgen"]}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"konsolenausgabe",children:"Konsolenausgabe"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-console",children:"Maier GmbH (5 Mitarbeiter)\n1 - Max Schmid - 50000\u20ac\n2 - Hans M\xfcller - 75000\u20ac\n3 - Lisa Meier - 40000\u20ac\n4 - Peter Schneider - 55000\u20ac\n5 - Miriam Albers - 90000\u20ac\n"})}),"\n",(0,a.jsx)(i.Z,{pullRequest:"39",branchSuffix:"class-diagrams/04"})]})}function m(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},85162:(e,s,n)=>{n.d(s,{Z:()=>t});n(67294);var a=n(90512);const r={tabItem:"tabItem_Ymn6"};var i=n(85893);function t(e){let{children:s,hidden:n,className:t}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,a.Z)(r.tabItem,t),hidden:n,children:s})}},74866:(e,s,n)=>{n.d(s,{Z:()=>w});var a=n(67294),r=n(90512),i=n(12466),t=n(16550),l=n(20469),o=n(91980),u=n(67392),c=n(50012);function d(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:s}=e;return!!s&&"object"==typeof s&&"value"in s}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:s,children:n}=e;return(0,a.useMemo)((()=>{const e=s??function(e){return d(e).map((e=>{let{props:{value:s,label:n,attributes:a,default:r}}=e;return{value:s,label:n,attributes:a,default:r}}))}(n);return function(e){const s=(0,u.l)(e,((e,s)=>e.value===s.value));if(s.length>0)throw new Error(`Docusaurus error: Duplicate values "${s.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[s,n])}function p(e){let{value:s,tabValues:n}=e;return n.some((e=>e.value===s))}function h(e){let{queryString:s=!1,groupId:n}=e;const r=(0,t.k6)(),i=function(e){let{queryString:s=!1,groupId:n}=e;if("string"==typeof s)return s;if(!1===s)return null;if(!0===s&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:s,groupId:n});return[(0,o._X)(i),(0,a.useCallback)((e=>{if(!i)return;const s=new URLSearchParams(r.location.search);s.set(i,e),r.replace({...r.location,search:s.toString()})}),[i,r])]}function g(e){const{defaultValue:s,queryString:n=!1,groupId:r}=e,i=m(e),[t,o]=(0,a.useState)((()=>function(e){let{defaultValue:s,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(s){if(!p({value:s,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${s}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return s}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:s,tabValues:i}))),[u,d]=h({queryString:n,groupId:r}),[g,b]=function(e){let{groupId:s}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(s),[r,i]=(0,c.Nk)(n);return[r,(0,a.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:r}),f=(()=>{const e=u??g;return p({value:e,tabValues:i})?e:null})();(0,l.Z)((()=>{f&&o(f)}),[f]);return{selectedValue:t,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),b(e)}),[d,b,i]),tabValues:i}}var b=n(72389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=n(85893);function v(e){let{className:s,block:n,selectedValue:a,selectValue:t,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:u}=(0,i.o5)(),c=e=>{const s=e.currentTarget,n=o.indexOf(s),r=l[n].value;r!==a&&(u(s),t(r))},d=e=>{let s=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=o.indexOf(e.currentTarget)+1;s=o[n]??o[0];break}case"ArrowLeft":{const n=o.indexOf(e.currentTarget)-1;s=o[n]??o[o.length-1];break}}s?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},s),children:l.map((e=>{let{value:s,label:n,attributes:i}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:a===s?0:-1,"aria-selected":a===s,ref:e=>o.push(e),onKeyDown:d,onClick:c,...i,className:(0,r.Z)("tabs__item",f.tabItem,i?.className,{"tabs__item--active":a===s}),children:n??s},s)}))})}function j(e){let{lazy:s,children:n,selectedValue:r}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(s){const e=i.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:i.map(((e,s)=>(0,a.cloneElement)(e,{key:s,hidden:e.props.value!==r})))})}function y(e){const s=g(e);return(0,x.jsxs)("div",{className:(0,r.Z)("tabs-container",f.tabList),children:[(0,x.jsx)(v,{...e,...s}),(0,x.jsx)(j,{...e,...s})]})}function w(e){const s=(0,b.Z)();return(0,x.jsx)(y,{...e,children:d(e.children)},String(s))}},85521:(e,s,n)=>{n.d(s,{Z:()=>o});n(67294);var a=n(74866),r=n(85162),i=n(33692),t=n(9286),l=n(85893);function o(e){let{pullRequest:s,branchSuffix:n}=e;return(0,l.jsxs)(a.Z,{children:[(0,l.jsxs)(r.Z,{value:"exercise",label:"Exercise",default:!0,children:[(0,l.jsx)(t.Z,{language:"console",children:`git switch exercises/${n}`}),(0,l.jsx)(i.Z,{to:`https://gitpod.io/#https://github.com/jappuccini/java-exercises/blob/exercises/${n}/Exercise.java`,children:(0,l.jsx)("img",{alt:"Open in Gitpod",src:"https://gitpod.io/button/open-in-gitpod.svg"})})]}),(0,l.jsxs)(r.Z,{value:"solution",label:"Solution",children:[(0,l.jsx)(t.Z,{language:"console",children:`git switch solutions/${n}`}),(0,l.jsx)(i.Z,{to:`https://gitpod.io/#https://github.com/jappuccini/java-exercises/blob/solutions/${n}/Exercise.java`,children:(0,l.jsx)("img",{alt:"Open in Gitpod",src:"https://gitpod.io/button/open-in-gitpod.svg"})})]}),(0,l.jsxs)(r.Z,{value:"pullrequest",label:"Pull Request",children:["Alle \xa0\xc4nderungen zwischen der Aufgabe und der L\xf6sung findest du im Pull Request"," ",(0,l.jsxs)(i.Z,{to:`https://github.com/jappuccini/java-exercises/pull/${s}/files?diff=split`,children:["PR#",s]})]})]})}}}]);