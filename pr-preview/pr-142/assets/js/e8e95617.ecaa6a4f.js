"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[6458],{31237:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>c});var s=i(85893),a=i(11151);const r={title:"W\xfcrfelspiel 1",description:"",tags:["console-applications","oo","enumerations","inheritance","polymorphy"]},l=void 0,t={id:"exam-exercises/exam-exercises-java1/dice-game-01",title:"W\xfcrfelspiel 1",description:"",source:"@site/docs/exam-exercises/exam-exercises-java1/dice-game-01.md",sourceDirName:"exam-exercises/exam-exercises-java1",slug:"/exam-exercises/exam-exercises-java1/dice-game-01",permalink:"/java-docs/pr-preview/pr-142/exam-exercises/exam-exercises-java1/dice-game-01",draft:!1,unlisted:!1,editUrl:"https://github.com/jappuccini/java-docs/tree/main/docs/exam-exercises/exam-exercises-java1/dice-game-01.md",tags:[{label:"console-applications",permalink:"/java-docs/pr-preview/pr-142/tags/console-applications"},{label:"oo",permalink:"/java-docs/pr-preview/pr-142/tags/oo"},{label:"enumerations",permalink:"/java-docs/pr-preview/pr-142/tags/enumerations"},{label:"inheritance",permalink:"/java-docs/pr-preview/pr-142/tags/inheritance"},{label:"polymorphy",permalink:"/java-docs/pr-preview/pr-142/tags/polymorphy"}],version:"current",frontMatter:{title:"W\xfcrfelspiel 1",description:"",tags:["console-applications","oo","enumerations","inheritance","polymorphy"]},sidebar:"examExercisesSidebar",previous:{title:"Kreatur",permalink:"/java-docs/pr-preview/pr-142/exam-exercises/exam-exercises-java1/creature"},next:{title:"W\xfcrfelspiel 2",permalink:"/java-docs/pr-preview/pr-142/exam-exercises/exam-exercises-java1/dice-game-02"}},o={},c=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Allgemeine Hinweise",id:"allgemeine-hinweise",level:2},{value:"Hinweis zur Klasse <em>WeaponDice</em>",id:"hinweis-zur-klasse-weapondice",level:2},{value:"Hinweis zur Klasse <em>Player</em>",id:"hinweis-zur-klasse-player",level:2},{value:"Spielablauf",id:"spielablauf",level:2},{value:"Beispielhafte Konsolenausgabe",id:"beispielhafte-konsolenausgabe",level:2}];function d(e){const n={code:"code",em:"em",h2:"h2",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Setze das abgebildete Klassendiagramm vollst\xe4ndig um. Orientiere Dich bei der\nKonsolenausgabe am abgebildeten Beispiel."}),"\n",(0,s.jsx)(n.h2,{id:"klassendiagramm",children:"Klassendiagramm"}),"\n",(0,s.jsx)(n.mermaid,{value:"classDiagram\n    WeaponDice o-- Weapon\n    MainClass o-- Player\n    MainClass o-- WeaponDice\n\n    class MainClass {\n        -player1: Player$\n        -player2: Player$\n        -scanner: Scanner$\n        -weaponDice: WeaponDice$\n        +main(args: String[]) void$\n    }\n\n    class Player {\n        -name: String &#123final&#125\n        -points: int\n        +Player(name: String, points: int)\n        +reducePoints(value: int) void\n    }\n\n    class WeaponDice {\n        -weapon: Weapon\n        +rollTheDice() void\n    }\n\n    class Weapon {\n        <<enumeration>>\n        SWORD = Schwert, 4\n        SPEAR = Speer, 2\n        AXE = Axt, 3\n        CLUB = Keule, 1\n        -description: String &#123final&#125\n        -power: int &#123final&#125\n    }"}),"\n",(0,s.jsx)(n.h2,{id:"allgemeine-hinweise",children:"Allgemeine Hinweise"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Aus Gr\xfcnden der \xdcbersicht werden im Klassendiagramm keine Getter und\nObject-Methoden dargestellt"}),"\n",(0,s.jsx)(n.li,{children:"So nicht anders angegeben, sollen Konstruktoren, Setter, Getter sowie die\nObject-Methoden wie gewohnt implementiert werden"}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"hinweis-zur-klasse-weapondice",children:["Hinweis zur Klasse ",(0,s.jsx)(n.em,{children:"WeaponDice"})]}),"\n",(0,s.jsxs)(n.p,{children:["Die Methode ",(0,s.jsx)(n.code,{children:"void rollTheDice()"})," soll mit einer gleichverteilten\nWahrscheinlichkeit dem Waffensymbol (",(0,s.jsx)(n.code,{children:"weapon"}),") einen Wert zuweisen."]}),"\n",(0,s.jsxs)(n.h2,{id:"hinweis-zur-klasse-player",children:["Hinweis zur Klasse ",(0,s.jsx)(n.em,{children:"Player"})]}),"\n",(0,s.jsxs)(n.p,{children:["Die Methode ",(0,s.jsx)(n.code,{children:"void reducePoints(points: int)"})," soll die Punkte des Spielers\n(",(0,s.jsx)(n.code,{children:"points"}),") um die eingehenden Punkte reduzieren."]}),"\n",(0,s.jsx)(n.h2,{id:"spielablauf",children:"Spielablauf"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Zu Beginn des Spiels sollen die Spieler ihre Namen eingeben k\xf6nnen"}),"\n",(0,s.jsx)(n.li,{children:"Jeder Spieler soll zu Beginn des Spiels 10 Punkte besitzen"}),"\n",(0,s.jsx)(n.li,{children:"Zu Beginn jeder Runde soll der aktuelle Punktestand f\xfcr beide Spieler\nausgegeben werden"}),"\n",(0,s.jsx)(n.li,{children:"Anschlie\xdfend sollen beide Spieler abwechselnd den W\xfcrfel werfen"}),"\n",(0,s.jsx)(n.li,{children:"Der Spieler mit dem niedrigeren Wurfwert (St\xe4rke des gew\xfcrfelten\nWaffensymbols) soll Punkte in H\xf6he der Differenz der beiden Wurfwerte\nverlieren"}),"\n",(0,s.jsx)(n.li,{children:"Das Spiel soll Enden, sobald ein Spieler keine Punkte mehr besitzt"}),"\n",(0,s.jsx)(n.li,{children:"Am Ende soll der Gewinner des Spiels ausgegeben werden"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"beispielhafte-konsolenausgabe",children:"Beispielhafte Konsolenausgabe"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"Spieler 1, gib bitte Deinen Namen ein: Lisa\nSpieler 2, gib bitte Deinen Namen ein: Hans\n\nPunkte Lisa: 10\nPunkte Hans: 10\nWaffen-Symbol Lisa: Schwert\nWaffen-Symbol Hans: Speer\nPunkte Hans: 8\n...\nPunkte Lisa: 1\nPunkte Hans: 5\nWaffen-Symbol Lisa: Keule\nWaffen-Symbol Hans: Speer\nPunkte Lisa: 0\n\nHans gewinnt\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>t,a:()=>l});var s=i(67294);const a={},r=s.createContext(a);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);