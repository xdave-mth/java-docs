"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[374],{91575:(e,n,s)=>{s.d(n,{A:()=>r});var i=s(96540),l=s(74848);function r(e){let{children:n,initSlides:s,width:r=null,height:t=null}=e;return(0,i.useEffect)((()=>{s()})),(0,l.jsx)("div",{className:"reveal reveal-viewport",style:{width:r??"100vw",height:t??"100vh"},children:(0,l.jsx)("div",{className:"slides",children:n})})}},99845:(e,n,s)=>{s.d(n,{i:()=>i});const i=()=>{const e=s(38182),n=s(72186),i=s(13504),l=s(93558);new(s(89665))({plugins:[e,n,i,l]}).initialize({hash:!0})}},28962:(e,n,s)=>{s.r(n),s.d(n,{default:()=>c});var i=s(28774),l=s(91575),r=s(99845),t=s(74848);function c(){return(0,t.jsxs)(l.A,{initSlides:r.i,children:[(0,t.jsxs)("section",{children:[(0,t.jsx)("section",{children:(0,t.jsx)("h2",{children:"Stack, Queue & List"})}),(0,t.jsxs)("section",{children:[(0,t.jsx)("h2",{children:"Agenda"}),(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{className:"fragment",children:"Stack"}),(0,t.jsx)("li",{className:"fragment",children:"Queue"}),(0,t.jsx)("li",{className:"fragment",children:"List"})]})]})]}),(0,t.jsxs)("section",{children:[(0,t.jsx)("section",{children:(0,t.jsx)("h2",{children:"Stack"})}),(0,t.jsxs)("section",{children:[(0,t.jsx)("h2",{children:"Was ist ein Stack?"}),(0,t.jsx)("p",{children:"Bei einem Stack werden neue Elemente gestapelt. Man kann immer nur das oberste Element entnehmen."}),(0,t.jsx)("p",{className:"foot-note fragment",children:"Beispiel Teller"})]}),(0,t.jsxs)("section",{children:[(0,t.jsx)("h2",{children:"Anwendungen von Stack"}),(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{className:"fragment",children:"Undo/Redo"}),(0,t.jsx)("li",{className:"fragment",children:"Browserverlauf"}),(0,t.jsx)("li",{className:"fragment",children:"Depth-First-Search (Trees)"})]})]}),(0,t.jsxs)("section",{children:[(0,t.jsx)("h2",{children:"Stack Operationen"}),(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{className:"fragment",children:"push \u2192 Element oben hinzuf\xfcgen"}),(0,t.jsx)("li",{className:"fragment",children:"pop \u2192 Element von oben entfernen"}),(0,t.jsx)("li",{className:"fragment",children:"peek \u2192 oberstes Element anschauen"}),(0,t.jsx)("li",{className:"fragment",children:"isEmpty"})]})]}),(0,t.jsx)("section",{children:(0,t.jsx)("h2",{children:(0,t.jsx)(i.A,{to:"https://github.com/jappuccini/java-exercises/tree/demos/steffen/demo/java2/dsa/stack",children:"Demo - Stack"})})}),(0,t.jsxs)("section",{children:[(0,t.jsx)("h2",{children:"Performance"}),(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{className:"fragment",children:"Zeitkomplexit\xe4t: O(1)"}),(0,t.jsx)("li",{className:"fragment",children:"Speicherkomplexit\xe4t: O(N)"})]}),(0,t.jsx)("p",{className:"foot-note fragment",children:"Wie kann man die Gr\xf6\xdfe ermitteln?"})]})]}),(0,t.jsxs)("section",{children:[(0,t.jsx)("section",{children:(0,t.jsx)("h2",{children:"Queue"})}),(0,t.jsxs)("section",{children:[(0,t.jsx)("h2",{children:"Was ist eine Queue?"}),(0,t.jsx)("p",{children:"Bei einer Queue werden neue Elemente hinten hinzugef\xfcgt. Man kann immer nur das vorderste Element entnehmen."}),(0,t.jsx)("p",{className:"foot-note fragment",children:"Beispiel Mensa"})]}),(0,t.jsxs)("section",{children:[(0,t.jsx)("h2",{children:"Anwendungen von Queue"}),(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{className:"fragment",children:"Daten\xfcbertragung"}),(0,t.jsx)("li",{className:"fragment",children:"Warteschlangenverarbeitung"}),(0,t.jsx)("li",{className:"fragment",children:"Scheduler in Betriebssystemen"})]})]}),(0,t.jsxs)("section",{children:[(0,t.jsx)("h2",{children:"Queue Operationen"}),(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{className:"fragment",children:"enqueue \u2192 Element hinten hinzuf\xfcgen"}),(0,t.jsx)("li",{className:"fragment",children:"dequeue \u2192 Element vorne entfernen"}),(0,t.jsx)("li",{className:"fragment",children:"peek \u2192 vorderstes Element anschauen"}),(0,t.jsx)("li",{className:"fragment",children:"isEmpty"})]})]}),(0,t.jsx)("section",{children:(0,t.jsx)("h2",{children:(0,t.jsx)(i.A,{to:"https://github.com/jappuccini/java-exercises/tree/demos/steffen/demo/java2/dsa/queue",children:"Demo - Queue"})})}),(0,t.jsxs)("section",{children:[(0,t.jsx)("h2",{children:"Performance"}),(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{className:"fragment",children:"Zeitkomplexit\xe4t: O(1)"}),(0,t.jsx)("li",{className:"fragment",children:"Speicherkomplexit\xe4t: O(N)"})]}),(0,t.jsx)("p",{className:"foot-note fragment",children:"Wie kann man die Gr\xf6\xdfe ermitteln?"})]})]}),(0,t.jsxs)("section",{children:[(0,t.jsx)("section",{children:(0,t.jsx)("h2",{children:"List"})}),(0,t.jsxs)("section",{children:[(0,t.jsx)("h2",{children:"Was ist eine Liste?"}),(0,t.jsx)("p",{children:"Bei einer Liste werden neue Elemente hinten oder an einer bestimmten Stelle hinzugef\xfcgt. Man kann auf jedes Element \xfcber einen Index in der Liste zugreifen, die Gr\xf6\xdfe ermitteln und Elemente l\xf6schen."}),(0,t.jsx)("p",{className:"foot-note fragment",children:"Beispiel ToDo Liste"})]}),(0,t.jsxs)("section",{children:[(0,t.jsx)("h2",{children:"List Operationen"}),(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{className:"fragment",children:"length"}),(0,t.jsx)("li",{className:"fragment",children:"prepend \u2192 Element vorne hinzuf\xfcgen"}),(0,t.jsx)("li",{className:"fragment",children:"append \u2192 Element hinten hinzuf\xfcgen"}),(0,t.jsx)("li",{className:"fragment",children:"insertAt \u2192 Element an Index hinzuf\xfcgen"}),(0,t.jsx)("li",{className:"fragment",children:"remove \u2192 Element l\xf6schen"}),(0,t.jsx)("li",{className:"fragment",children:"removeAt \u2192 Element an Index l\xf6schen"}),(0,t.jsx)("li",{className:"fragment",children:"get \u2192 Element an Index zur\xfcckgeben"})]})]}),(0,t.jsx)("section",{children:(0,t.jsx)("h2",{children:(0,t.jsx)(i.A,{to:"https://github.com/jappuccini/java-exercises/tree/demos/steffen/demo/java2/dsa/lists",children:"Demo - List"})})}),(0,t.jsxs)("section",{children:[(0,t.jsx)("h2",{children:"Performance"}),(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{className:"fragment",children:"Zeitkomplexit\xe4t: O(1) \u2192 length, prepend, append"}),(0,t.jsx)("li",{className:"fragment",children:"Zeitkomplexit\xe4t: O(N) \u2192 insertAt, remove, removeAt, get"}),(0,t.jsx)("li",{className:"fragment",children:"Speicherkomplexit\xe4t: O(N)"})]}),(0,t.jsx)("p",{className:"foot-note fragment",children:"Vergleich ArrayList \u2192 LinkedList"})]})]}),(0,t.jsxs)("section",{children:[(0,t.jsx)("h2",{children:"Rest of the day"}),(0,t.jsx)("p",{children:"Firobed: \ud83c\udf7a"})]})]})}}}]);