"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[7911],{8440:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var s=i(85893),r=i(11151);const a={title:2024,description:"",sidebar_position:90,tags:[]},t=void 0,l={id:"additional-material/steffen/java-1/exam-preparation/2024",title:"2024",description:"",source:"@site/docs/additional-material/steffen/java-1/exam-preparation/2024.mdx",sourceDirName:"additional-material/steffen/java-1/exam-preparation",slug:"/additional-material/steffen/java-1/exam-preparation/2024",permalink:"/java-docs/additional-material/steffen/java-1/exam-preparation/2024",draft:!1,unlisted:!1,editUrl:"https://github.com/jappuccini/java-docs/tree/main/docs/additional-material/steffen/java-1/exam-preparation/2024.mdx",tags:[],version:"current",sidebarPosition:90,frontMatter:{title:"2024",description:"",sidebar_position:90,tags:[]},sidebar:"additionalMaterialSidebar",previous:{title:"Klausurvorbereitung",permalink:"/java-docs/additional-material/steffen/java-1/exam-preparation/"},next:{title:"2023",permalink:"/java-docs/additional-material/steffen/java-1/exam-preparation/2023"}},o={},c=[{value:"Aufgabe 1",id:"aufgabe-1",level:2},{value:"Hinweise zur Klasse EngineType",id:"hinweise-zur-klasse-enginetype",level:3},{value:"Hinweise zur Klasse Vehicle",id:"hinweise-zur-klasse-vehicle",level:3},{value:"Hinweise zur Klasse Car",id:"hinweise-zur-klasse-car",level:3},{value:"Hinweise zur Klasse Truck",id:"hinweise-zur-klasse-truck",level:3},{value:"Hinweise zur Klasse ExamTask04",id:"hinweise-zur-klasse-examtask04",level:3}];function d(e){const n={h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",p:"p",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"aufgabe-1",children:"Aufgabe 1"}),"\n",(0,s.jsxs)(n.p,{children:["Erstelle die Klassen ",(0,s.jsx)(n.strong,{children:"EngineType (6 Punkte)"}),", ",(0,s.jsx)(n.strong,{children:"Vehicle (4 Punkte)"}),", ",(0,s.jsx)(n.strong,{children:"Car (3\nPunkte)"}),", ",(0,s.jsx)(n.strong,{children:"Truck (4 Punkte)"})," und ",(0,s.jsx)(n.strong,{children:"ExamTask01 (7 Punkte)"})," anhand des\nabgebildeten Klassendiagramms."]}),"\n",(0,s.jsx)(n.mermaid,{value:"classDiagram\n  EngineType --o Vehicle\n  Car --|> Vehicle : extends\n  Truck --|> Vehicle : extends\n\n  class Vehicle {\n    <<abstract>>\n    -allVehicles: ArrayList~Vehicle~ &lcub; final &rcub; $\n    #engineType: EngineType &lcub; final &rcub;\n\n    Vehicle(engineType: EngineType)\n    +readyForUse() boolean &lcub; abstract &rcub;\n    +getAllVehicles() ArrayList~Vehicle~ $\n  }\n\n  class EngineType {\n    <<enumeration>>\n    ELECTRO = 'E'\n    HYDROGEN = 'H'\n    DIESEL = 'D'\n    PETROL = 'P'\n    -type: char\n\n    EngineType(type: char)\n    +getType() char\n    +canBeSustainable() boolean\n  }\n\n  class Car {\n    -fuelLevel int\n\n    +Car(engineType: EngineType, fuelLevel: int)\n    +readyForUse() boolean\n  }\n\n  class Truck {\n    -MAXIMUM_ALLOWED_WEIGHT int &lcub; final &rcub; = 7500$\n    -weight int\n\n    +Truck(engineType: EngineType, weight: int)\n    +readyForUse() boolean\n  }\n\n  class ExamTask01 {\n    +main(args: String[]) void$\n  }"}),"\n",(0,s.jsx)(n.h3,{id:"hinweise-zur-klasse-enginetype",children:"Hinweise zur Klasse EngineType"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Erstelle die vier Konstanten Elektro, Wasserstoff, Diesel und Benzin f\xfcr die\nArten eines Motors."}),"\n",(0,s.jsx)(n.li,{children:"Der Konstruktor soll alle Attribute initialisieren."}),"\n",(0,s.jsxs)(n.li,{children:["Die Methode ",(0,s.jsx)(n.strong,{children:"getType"})," soll den Typ der Motorart zur\xfcckgeben."]}),"\n",(0,s.jsxs)(n.li,{children:["Die Methode ",(0,s.jsx)(n.strong,{children:"canBeSustainable"})," soll true zur\xfcckgeben, wenn es ein Elektro-\noder Wasserstoffmotor ist."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"hinweise-zur-klasse-vehicle",children:"Hinweise zur Klasse Vehicle"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Der Konstruktor soll engineType initialisieren und das erstellte Vehicle der\nArrayList allVehicles hinzuf\xfcgen."}),"\n",(0,s.jsxs)(n.li,{children:["Die Methode ",(0,s.jsx)(n.strong,{children:"getAllVehicles"})," soll die Liste der erstellten Fahrzeuge\nzur\xfcckgeben."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"hinweise-zur-klasse-car",children:"Hinweise zur Klasse Car"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Der Konstruktor soll alle Attribute initialisieren."}),"\n",(0,s.jsxs)(n.li,{children:["Die Methode ",(0,s.jsx)(n.strong,{children:"readyForUse"})," soll true zur\xfcckgeben, wenn der Tank nicht leer\nist."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"hinweise-zur-klasse-truck",children:"Hinweise zur Klasse Truck"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Der Konstruktor soll alle Attribute initialisieren."}),"\n",(0,s.jsxs)(n.li,{children:["Die Methode ",(0,s.jsx)(n.strong,{children:"readyForUse"})," soll true zur\xfcckgeben, wenn das Gewicht des Trucks\ndas maximal erlaubte Gewicht nicht \xfcberschreitet."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"hinweise-zur-klasse-examtask04",children:"Hinweise zur Klasse ExamTask04"}),"\n",(0,s.jsx)(n.p,{children:"Erzeuge ein Elektroauto mit leerem Akku und ein Benzinauto mit einem Tanklevel\nvon 50. Erzeuge ein Dieseltruck mit einem Gewicht von 6000 und ein\nWasserstofftruck der 1500 wiegt."}),"\n",(0,s.jsx)(n.p,{children:"\xdcberpr\xfcfe alle erzeugten Fahrzeuge mithilfe einer Schleife und ermittle die\nAnzahl der betriebsbereiten Autos. Gib die Anzahl in der Konsole aus."})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>t});var s=i(67294);const r={},a=s.createContext(r);function t(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);